#!/usr/bin/env python3

import re
import sys

from sympy import substitution

default_char_freq = "оеаинтсрвлкмдпуяыьгзбчйхжшюцщэфёъ"
dictionary = dict()
char_freq = dict()
bigram_freq = dict()
trigram_freq = dict()


def update_dict(word: str):
  word_copy = word.lower()
  for char in word_copy:
    char_freq[char] = char_freq.get(char, 0) + 1

  for idx in range(0, len(word_copy) - 1):
    bigram_freq[word_copy[idx:idx + 2]] = bigram_freq.get(word_copy[idx:idx + 2], 0) + 1

    if idx < len(word) - 2:
      trigram_freq[word_copy[idx:idx + 3]] = trigram_freq.get(word_copy[idx:idx + 3], 0) + 1


def process_text(cipher_text: str):
  word_list = list(filter(None, re.split("\W+", cipher_text)))
  for word in word_list:
    update_dict(word)

  char_freq_sorted = list(char_freq.items())
  char_freq_sorted.sort(key=lambda tup: tup[1], reverse=True)

  bigram_sorted = list(bigram_freq.items())
  bigram_sorted.sort(key=lambda tup: tup[1], reverse=True)

  trigram_sorted = list(trigram_freq.items())
  trigram_sorted.sort(key=lambda tup: tup[1], reverse=True)

  substitution_dict = {
    'й': 'э', # йлт == это: high freq of 'л', 'т'
    'л': 'т',
    'т': 'о',
    'п': 'ч', # плт == кто / что
    'р': 'а', # йлр == эта
    'г': 'б', # плтги == что__
    'и': 'ы',
    'ж': 'м', # жи == _ы (б have been used)
    'к': 'н', # ткр == о_и
    'ь': 'к', # ьрь == _а_ (как)
    'д': 'е', # пдж == ч_м (чем)
    'я': 'ш', # кря == на_ (наш)
    'ф': 'у', # джф == ем_ (ему)
    'э': 'и', # Гэльтхк == б_тко_н (биткойн)
    'х': 'й',
    'о': 'ь',# тпдко == очен_ (очень)
    'ъ': 'л', # эъэ == и_и (или)
    'а': 'г', # дат == е_о (его)
    'ю': 'р', # юргтлрдл == _аботает (работает)
    'б': 'д', # бдът == _ело (дело)
    'е': 'я', # бъе == для
    'з': 'п', # ьюэзлтнръыли == кри_то_ал_ты (криптовалюты)
    'ы': 'ю',
    'н': 'в',
    'в': 'с', # вдгд == _ебе (себе)
    'ш': 'з', # бтьршрлдъовлнт == дока_ательство (доказательство)
    'щ': 'х', # влрюлрзрщ == стартапа_ (стартапах)
    'у': 'х', # нруктвло == ва_ность (важность)
    'с': 'ц', # экндвлэсэещ == инвести_иях (инвестициях)
    'ч': 'ф', # ьюэзлтаюрчээ == криптогра_ии (криптографии)
    'ц': 'щ', # эъъывлюэюфыцэщ == иллюстрирую_их (иллюстрирующих)
    'м': 'ъ', # тгмевкэло == об_яснить (объяснить)
    'ё': 'ё' # didn't changed
  }

  result_text = list()
  for idx in range(len(cipher_text)):
    search_res = substitution_dict.get(cipher_text[idx].lower(), '_' if cipher_text[idx].lower() in default_char_freq else cipher_text[idx].lower())
    result_text.append(search_res)

  print("".join(result_text))

  word_list_cipher = list(filter(None, re.split("\W+", cipher_text)))
  word_list_result = list(filter(None, re.split("\W+", "".join(result_text))))

  for idx in range(len(word_list_result)):
    if '_' in word_list_result[idx]:
      print(f"{word_list_cipher[idx]} : {word_list_result[idx]}")

  for key in sorted(substitution_dict):
    print(f"{key}:{substitution_dict[key]}")

  # print(f"Char freq: {char_freq_sorted}")
  # print(f"Bigram double freq: {[bigram for bigram in bigram_sorted if bigram[0][0] == bigram[0][1]]}")
  # print(f"Bigram freq: {bigram_sorted}")


  # print(f"Trigram freq: {trigram_sorted}")




if __name__ == "__main__":
  if len(sys.argv) == 2:
    cipher_text = sys.argv[1]
  else:
    cipher_text = '''Гэльтхк э ьюэзлтнръыли тпдко юдшткрквкид лджи. Жи жктат въияръэ т влрюлрзрщ, экндвлэсэещ, жэлрзрщ э зтьфзьрщ зэсси шр гэльтхки. Тзлэжэвли ндюел, плт гэльтхк ьтюдккиж тгюрштж эшждкэл ждубфкрютбкид зърлдуэ, йьтктжэьф э бруд зтъэлэьф. Здввэжэвли впэлрыл, плт гэльтхк эшкрпръокт тяэгтпдк э ьюэзлтнръылф туэбрдл кдэшгдуких ьюрщ. Н твктнд йлэщ бнфщ юршкищ ншаъебтн ъдурл шргъфубдкэе э зфлркэср тлктвэлдъокт зткэжркэе лтат, плт лрьтд гэльтхк э ьрь йлт юргтлрдл. Жи крзэвръэ йлф ькэаф, плтги зтжтпо тлбдъэло шдюкр тл зъдндъ э бтгюрлове бт вржтх вфлэ ьюэзлтнръыли, ьтлтюре бдърдл гэльтхк фкэьръокиж енъдкэдж. Плтги бдхвлнэлдъокт зткэжрло, плт лрьтат твтгдкктат н гэльтхкд, жи зюдубд нвдат бтъуки зткэжрло ьрь йлт юргтлрдл кр лдщкэпдвьтж фютнкд. Гэльтхк бдхвлнэлдъокт ктнре лдщктътаэе э жи жтудж шрхлэ тпдко бръдьт, н зтзильрщ тгмевкэло дат пдюдш зютвлид ркрътаээ в лдщктътаэежэ зютяътат. Гфбдж впэлрло, плт кря пэлрлдъо эжддл грштнтд зткэжркэд ьтжзоылдюкищ крфь  - ьрь юргтлрдл ьтжзоылдю, влюфьлфюф брккищ э ръатюэлжтн, р лрьуд эжддл кдьтлтюид крниьэ н зютаюржжэютнркээ. Двъэ ни влфбдкл эъэ низфвькэь ьтжзоылдюкищ лдщктъаэх, юршюргтлпэь зютаюржжктат тгдвздпдкэе, зюдбзюэкэжрлдъо эъэ зютвлт фнъдьрдлдво лдщктътаэежэ — йлр ькэар бъе нрв. Ъыгре нръылр кфубрдлве н тзюдбдъдкктж ьтклютъд э ждлтбрщ тгдвздпдкэе гдштзрвктвлэ, бъе зюдбтлнюрцдкэе жтядккэпдвлнр. Н въфпрд в чэрлкижэ (люрбэсэтккижэ) нръылржэ, йлэж шркэжрылве тюаркэшрсээ нютбд сдклюръокищ гркьтн, ьтлтюид ьтклютъэюфыл бдкоаэ э юршюргрлинрыл вюдбвлнр шрцэли ьфзыю э жткдл. Шрцэлкид шкрьэ влрнел тзюдбдъдкких грюодю бъе шътфжияъдккэьтн, тбкрьт, кд арюрклэюфыл зтъкфы кднтшжтуктвло зтббдъьэ бдкдукищ шкрьтн. Н ьткдпктж впдлд, зюрнттщюркэлдъокиж тюаркрж кдтгщтбэжт зюдбтвлдюдарло ъыбдх тл зюрнткрюфядкэх. Ьюэзлтнръыли лрьуд кфубрылве н вюдбвлнрщ шрцэли, плтги кд зтшнтъэло ъыбеж крюфяэло сдътвлктвло вэвлджи э шрцэлэлове тл ншрэжтэвьъыпрыцэщ шренъдкэх юршкищ влтютк. Крзюэждю, двъэ Ръэвр фгдубрдл Гтгр, плт ткр тлзюрнэър джф жткдлф, ткр кд бтъукр эждло нтшжтуктвлэ бтьршрло Ьйютъ, плт тлзюрнэър лф уд вржфы жткдлф. Твктнкре юршкэср в чэрлкижэ нръылржэ н лтж, плт ждщркэшжи гдштзрвктвлэ бтъуки гило зтвлютдки э твктнрки кр лдщктътаэещ, р кд кр нъэекээ нървлдх. Ьрь тпднэбкт эш кршнркэе, н твктнд ьюэзлтнръыл ъдуэл ьюэзлтаюрчэе. В зтжтцоы ьюэзлтаюрчээ тгдвздпэнрылве гдштзрвктвло э зюрнэър яэчютнркэе н вржтх вэвлджд ьюэзлтнръыл. Йлт зтшнтъедл зюдбтлнюрлэло чръовэчэьрсэы жткдл э шряэчютнрло зюрнэър йжэввээ н жрлджрлэпдвьэх ръатюэлж нръыли. Зтйлтжф, зюдубд пдж жи вжтудж зткело ьюэзлтнръыли, крж зюэбдлве тшкрьтжэлове в твктнржэ ьюэзлтаюрчээ. Ьюэзлтаюрчэе вржр зт вдгд — таютжктд зтъд бъе рьрбджэпдвьэщ эввъдбтнркэх в эвзтъоштнркэдж втнюдждккищ жрлджрлэпдвьэщ ждлтбтн, ьтлтюид, ьрь эшндвлкт, бтвлрлтпкт вътуки бъе зткэжркэе. Ь впрвлоы, гэльтхк твктнрк кр кдвьтъоьэщ тлктвэлдъокт зютвлищ э щтютят эшндвлкищ ьюэзлтаюрчэпдвьэщ ьтквлюфьсэещ. Н йлтх аърнд жи гфбдж эшфпрло ьюэзлтаюрчэпдвьэд щйяэ э сэчютнид зтбзэвэ — бнр зюэжэлэнр, ьтлтюид бтьршръэ внты зтъдшктвло зюэ втшбркээ ьюэзлтнръыл. Н зтвъдбфыцэщ аърнрщ гфбфл зюдбвлрнъдки гтъдд вътукид ьюэзлтаюрчэпдвьэд вщджи, ь зюэждюф — бтьршрлдъовлнт в кфъдниж юршаърядкэдж, ьтлтютд эвзтъошфдлве н зюдбърарджищ юрвяэюдкэещ э жтбэчэьрсэещ гэльтхкр. Зтвъд лтат ьрь жи зткеъэ  нвы нруктвло ьюэзлтаюрчээ, жи тгвфбэж ьрь ткр эвзтъошфдлве бъе втшбркэе ьюэзлтнръыл. Н ьтксд ькэаэ жи зюэндбдж зюэждюи зютвлищ ьюэзлтнръыл, эъъывлюэюфыцэщ зютдьлкид шрбрпэ, в ьтлтюижэ зюэбдлве эждло бдът.'''
  process_text(cipher_text)